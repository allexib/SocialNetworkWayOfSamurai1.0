{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusЦWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileInfo/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","React","memo","console","log","postsElements","posts","map","p","postsBlock","values","addPost","newPostText","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,iBAAmB,wC,0CCArCD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,oBCAnED,EAAOC,QAAU,CAAC,KAAO,qB,uJCcVC,EAZF,SAACC,GACZ,OACE,sBAAKC,UAAWC,IAAEC,KAAlB,UACA,qBAAKC,IAAI,2EACFJ,EAAMK,QACP,gCACJ,wCADI,IACgBL,EAAMM,kB,iCCF1BC,EAAcC,YAAiB,IAejCC,EAAsBC,YAAU,CAACC,KAAK,yBAAhBD,EAbL,SAACV,GAClB,OAAO,uBAAMY,SAAUZ,EAAMa,aAAtB,UACH,8BACI,cAACC,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWC,IAAUC,YAAa,eACrDC,SAAU,CAACC,IAAUb,OAGhC,8BACI,sDAyCGc,EAlCCC,IAAMC,MAAK,SAAAvB,GACnBwB,QAAQC,IAAI,UACZ,IAAIC,EACA1B,EAAM2B,MAAMC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAMxB,QAASwB,EAAExB,QAASC,WAAYuB,EAAEvB,gBASjE,OACI,sBAAKL,UAAWC,IAAE4B,WAAlB,UACI,0CACA,cAACrB,EAAD,CAAqBG,SARb,SAACmB,GACb/B,EAAMgC,QAAQD,EAAOE,gBAQjB,qBAAKhC,UAAWC,IAAEyB,MAAlB,SACKD,U,6BCtCOJ,IAAMY,U,QC2CnBC,EAzCgB,SAACnC,GAAW,IAAD,EAERoC,oBAAS,GAFD,mBAEjCC,EAFiC,KAEvBC,EAFuB,OAGZF,mBAASpC,EAAMuC,QAHH,mBAGjCA,EAHiC,KAGzBC,EAHyB,KAKtCC,qBAAU,WAEND,EAAUxC,EAAMuC,UACjB,CAACvC,EAAMuC,SAeV,OACI,iCACOF,GACH,8BACI,sBAAOK,cAjBM,WACrBJ,GAAY,IAgBJ,SAA0CtC,EAAMuC,QAAU,aAG7DF,GACD,8BACI,uBAAQM,SAbI,SAACC,GACrBJ,EAAUI,EAAEC,cAAcC,QAYgBC,WAAW,EAAMC,OAlBpC,WACvBV,GAAY,GACZtC,EAAMiD,aAAaV,IAiBHO,MAAOP,UCfhBW,EAhBK,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,QAASZ,EAA0B,EAA1BA,OAAQU,EAAkB,EAAlBA,aACnC,OAAKE,EAKD,8BACI,sBAAKlD,UAAWC,IAAEkD,iBAAlB,UACI,qBAAKhD,IAAK+C,EAAQE,OAAOC,QACzB,cAAC,EAAD,CAAwBf,OAAQA,EAAQU,aAAcA,SAPvD,cAACM,EAAA,EAAD,K,gBCcAC,EAFUC,aAfD,SAACC,GACrB,MAAO,CACH/B,MAAO+B,EAAMC,YAAYhC,MACzBM,YAAayB,EAAMC,YAAY1B,gBAGZ,SAAC2B,GACxB,MAAO,CACH5B,QAAS,SAACC,GACN2B,EAASC,YAAqB5B,QAMjBwB,CAA6CpC,GCJvDyC,EAVC,SAAC9D,GAEb,OACI,gCACI,cAAC,EAAD,CAAamD,QAASnD,EAAMmD,QAASZ,OAAQvC,EAAMuC,OAAQU,aAAcjD,EAAMiD,eAC/E,cAAC,EAAD,Q,uBCHNc,E,kLAGE,IAAIC,EAASC,KAAKjE,MAAMkE,MAAMC,OAAOH,OAChCA,IACDA,EAASC,KAAKjE,MAAMoE,mBAEhBH,KAAKjE,MAAMqE,QAAQC,KAAK,UAGhCL,KAAKjE,MAAMuE,eAAeP,GAC1BC,KAAKjE,MAAMwE,UAAUR,K,+BAMrB,OACG,cAAC,EAAD,2BAAaC,KAAKjE,OAAlB,IACSmD,QAASc,KAAKjE,MAAMmD,QACpBZ,OAAQ0B,KAAKjE,MAAMuC,OACnBU,aAAcgB,KAAKjE,MAAMiD,oB,GArBb3B,IAAMY,WAoCvBuC,sBACXhB,aAXkB,SAACC,GAEnB,MAAO,CACHP,QAASO,EAAMC,YAAYR,QAC3BZ,OAAQmB,EAAMC,YAAYpB,OAC1B6B,iBAAkBV,EAAMgB,KAAKV,OAC7BW,OAAQjB,EAAMgB,KAAKC,UAKE,CAACJ,mBAAgBC,cAAWvB,mBACrD2B,IAFWH,CAIbV","file":"static/js/3.5ed61009.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3_2nu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__36faE\",\"posts\":\"MyPosts_posts__3v6YG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1vGaX\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n    <img src='https://vk-free-stickers.ru/wp-content/uploads/2020/07/mudakot_ava.jpg' />\r\n         { props.message }\r\n          <div>\r\n      <span>like</span> { props.likesCount }\r\n    </div>\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]}/>\r\n\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form:'ProfileAddNewPostForm'})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n        console.log(\"RENDER\");\r\n        let postsElements =\r\n            props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n        let newPostElement = React.createRef();\r\n\r\n        let onAddPost = (values) => {\r\n            props.addPost(values.newPostText);\r\n        }\r\n\r\n\r\n        return (\r\n            <div className={s.postsBlock}>\r\n                <h3>My posts</h3>\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        )\r\n});\r\n// const AddNewPostForm = (props) => {\r\n//     return (\r\n//         <form>\r\n//             <div>\r\n//                     <textarea onChange={onPostChange} ref={newPostElement}\r\n//                               value={props.newPostText} />\r\n//             </div>\r\n//             <button onClick={onAddPost}>Add post</button>\r\n//         </form>\r\n//     )\r\n// }\r\n\r\nexport default MyPosts;","import React from 'react';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState ({\r\n            editMode: true\r\n\r\n        });\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState ({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ this.activateEditMode}>{this.props.status || \"------\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true}\r\n                           onBlur={this.deactivateEditMode.bind(this)}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const  onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span  onDoubleClick={ activateEditMode}>{props.status || \"------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input  onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                        value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusЦWithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../../redux/profile-reducer\";\r\nimport MyPosts from \"../MyPosts\";\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/Post/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, {Component} from 'react';\r\nimport Profile from \"../Profile\";\r\nimport * as axios from \"axios/index\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer  extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"RENDER PROFILE\");\r\n        return (\r\n           <Profile {...this.props}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    // console.log('mapStateToProps PROFILE');\r\n    return({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}